{"version":3,"sources":["TypedWord.js","Input.js","Indicators.js","LeaderboardEntry.js","Leaderboard.js","LoadingDialog.js","Options.js","OpeningDialog.js","Character.js","Prompt.js","ProgressBars.js","App.js","serviceWorker.js","index.js"],"names":["TypedWord","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","updated","setState","className","incorrect","react_default","a","createElement","word","React","PureComponent","Input","handleClick","inputRef","current","focus","createRef","_this2","typedWords","words","map","index","correctWords","TypedWord_TypedWord","key","onClick","active","Input_InputField","ref","onChange","onWordTyped","popPrevWord","Component","InputField","_this3","handleKeyDown","e","keyCode","target","innerText","setText","concat","handleInput","value","test","split","newWords","i","length","push","join","text","toStart","range","document","createRange","selectNodeContents","collapse","selection","window","getSelection","removeAllRanges","addRange","contentEditable","onInput","onKeyDown","Indicators","Indicator","wpm","accuracy","remainingTime","LeaderboardEntry","rank","name","score","LoadingDialog","Modal_default","size","aria-labelledby","centered","show","onHide","Header","closeButton","Title","Body","id","Array","fill","_","LeaderboardEntry_LeaderboardEntry","Footer","numPlayers","Spinner_default","animation","Options","Fragment","CheckBox","autoCorrect","onAutoCorrectToggle","RestartButton","onRestart","type","checked","htmlFor","OpeningDialog","setMode","mode","Button_default","Mode","SINGLE","variant","WAITING","Character","correct","wrong","char","Prompt","promptedWords","currWord","pastEnd","promptedWord","typedWord","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","Character_Character","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","j","ProgressBars","_ref","allProgress","progress","playerIndex","variants","_ref2","_ref3","slicedToArray","time","displayText","toFixed","playerSuffix","ProgressBar_default","animated","label","now","MULTI","WELCOME","App","initialize","inputActive","$","post","data","pigLatin","translated","startTime","currTime","clearInterval","timer","restart","setInterval","updateReadouts","getCurrTime","promptedText","typedText","endTime","reportProgress","typed","prompt","requestProgress","targets","playerList","every","p","multiplayerTimer","fastestWords","out","slice","Date","getTime","handleWordTyped","wordIndex","handleChange","handlePigLatinToggle","handleAutoCorrectToggle","requestMatch","start","players","numWaiting","toggleLeaderBoard","showLeaderboard","toString","getElementById","style","filter","_this$state","indexOf","fastestWordsDisplay","Indicators_Indicators","ProgressBars_ProgressBars","Prompt_Prompt","Input_Input","Options_Options","onPigLatinToggle","OpeningDialog_OpeningDialog","toggleFindingOpponents","LoadingDialog_LoadingDialog","Boolean","location","hostname","match","body","prepend","Comment","String","raw","_templateObject","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c41ec7fa.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./TypedWord.css\";\n\nexport default class TypedWord extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            updated: false,\n        };\n    }\n\n    componentDidUpdate() {\n        if (!this.state.updated) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({ updated: true });\n        }\n    }\n\n    render() {\n        let className = \"TypedWord \";\n        if (this.state.updated && this.props.incorrect) {\n            className += \"both\";\n        } else if (this.props.incorrect) {\n            className += \"incorrect\";\n        } else if (this.state.updated) {\n            className += \"updated\";\n        }\n\n        return (\n            <span className={className}>\n                {this.props.word}\n                {\" \"}\n            </span>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport \"./Input.css\";\nimport TypedWord from \"./TypedWord.js\";\n\nexport default class Input extends Component {\n    constructor(props) {\n        super(props);\n        this.inputRef = React.createRef();\n    }\n\n    componentDidMount() {\n        if (this.inputRef.current) {\n            this.inputRef.current.focus();\n        }\n    }\n\n    handleClick = () => {\n        if (this.inputRef.current) {\n            this.inputRef.current.focus();\n        }\n    };\n\n    render() {\n        const typedWords = this.props.words.map(\n            (word, index) => {\n                const incorrect = this.props.correctWords[index] !== word;\n                return (\n                    <TypedWord\n                        key={index}\n                        word={word}\n                        incorrect={incorrect}\n                    />\n                );\n            },\n        );\n        return (\n            <div className=\"Input\">\n                And type them below:\n                <div className=\"InputBox\" onClick={this.handleClick}>\n                    {typedWords}\n                    {this.props.active\n                    && (\n                        <InputField\n                            ref={this.inputRef}\n                            active={this.props.active}\n                            onChange={this.props.onChange}\n                            onWordTyped={this.props.onWordTyped}\n                            popPrevWord={this.props.popPrevWord}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass InputField extends Component {\n    constructor(props) {\n        super(props);\n        this.inputRef = React.createRef();\n    }\n\n    handleKeyDown = (e) => {\n        if (e.keyCode !== 8) {\n            return;\n        }\n        if (e.target.innerText !== \"\") {\n            return;\n        }\n        this.setText(`${this.props.popPrevWord()} `, false);\n    };\n\n    handleInput = (e) => {\n        const value = e.target.innerText;\n        if (/\\s/.test(value)) {\n            const words = value.split(/\\s/);\n            const newWords = [];\n            for (let i = 0; i !== words.length - 1; ++i) {\n                const ok = this.props.onWordTyped(words[i]);\n                if (!ok) {\n                    newWords.push(words[i]);\n                }\n            }\n            this.setText(newWords.join(\" \") + words[words.length - 1]);\n        } else {\n            this.props.onChange(value);\n        }\n    };\n\n    setText = (text, toStart) => {\n        this.inputRef.current.innerText = text;\n\n        // https://stackoverflow.com/questions/1125292/how-to-move-cursor-to-end-of-contenteditable-entity/3866442#3866442\n        const range = document.createRange();\n        range.selectNodeContents(this.inputRef.current);\n        range.collapse(toStart);\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    };\n\n    focus() {\n        this.inputRef.current.focus();\n    }\n\n\n    render() {\n        return (\n            <span\n                className=\"InputField\"\n                ref={this.inputRef}\n                contentEditable={this.props.active}\n                onInput={this.handleInput}\n                onKeyDown={this.handleKeyDown}\n            />\n        );\n    }\n}\n","import React from \"react\";\nimport \"./Indicators.css\";\n\nexport default function Indicators(props) {\n    return (\n        <div className=\"Indicators\">\n            <Indicator text={`WPM: ${props.wpm}`} />\n            <Indicator text={`Accuracy: ${props.accuracy}`} />\n            <Indicator text={`Time: ${props.remainingTime}`} />\n        </div>\n    );\n}\n\nfunction Indicator(props) {\n    return (\n        <div className=\"Indicator\">\n            {props.text}\n        </div>\n    );\n}\n","import React from \"react\";\nimport \"./LeaderboardEntry.css\";\n\nexport default function LeaderboardEntry(props) {\n    return (\n        <div className=\"Entry\">\n            <div className=\"Rank\">{props.rank}</div>\n            <div className=\"Name\">{props.name}</div>\n            <div className=\"Score\">{props.score}</div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"./Leaderboard.css\";\nimport LeaderboardEntry from \"./LeaderboardEntry.js\";\n\nexport default function LoadingDialog(props) {\n    return (\n        <Modal\n            size=\"sm\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            show={props.show}\n            onHide={props.onHide}\n        >\n            <Modal.Header\n                closeButton\n            >\n                <Modal.Title className=\"Header\">Leaderboard</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <div className=\"Entries\">\n                    <p id=\"Title\">Top Ten Speeds</p>\n                    {Array(10).fill(0).map((_, index) => (<LeaderboardEntry name=\"Manav\" index={index} rank={index + 1} score={100 - index} />))}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <div className=\"Footer\">\n                    <p>Your best speed is 56.1 WPM</p>\n                </div>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport \"./LoadingDialog.css\";\n\nexport default function LoadingDialog(props) {\n    return (\n        <Modal\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            show={props.show}\n        >\n            <Modal.Body>\n                <div className=\"Spinner\">\n                    <p>Looking for opponents...</p>\n                    <p>\n                        {props.numPlayers - 1}\n                        {\" \"}\n                        other player(s) found so far!\n                    </p>\n                    <Spinner animation=\"border\" />\n                </div>\n            </Modal.Body>\n        </Modal>\n    );\n}\n","import React from \"react\";\nimport \"./Options.css\";\n\nexport default function Options(props) {\n    return (\n        <>\n            <CheckBox\n                id=\"autoCorrectCheckBox\"\n                text=\"Enable Auto-Correct\"\n                value={props.autoCorrect}\n                onChange={props.onAutoCorrectToggle}\n            />\n            <br />\n            <RestartButton\n                onClick={props.onRestart}\n            />\n        </>\n    );\n}\n\nfunction CheckBox(props) {\n    return (\n        <div className=\"Options custom-control custom-checkbox\">\n            <input\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                id={props.id}\n                checked={props.value}\n                onChange={props.onChange}\n            />\n            <label className=\"custom-control-label\" htmlFor={props.id}>{props.text}</label>\n        </div>\n    );\n}\n\nfunction RestartButton(props) {\n    return (\n        <div className=\"Button\">\n            <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={props.onClick}\n            >\nRestart\n            </button>\n        </div>\n    );\n}\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./OpeningDialog.css\";\nimport { Mode } from \"./App.js\";\n\nexport default function OpeningDialog(props) {\n    const setMode = (mode) => () => {\n        props.setMode(mode);\n    };\n\n    return (\n        <Modal\n            size=\"sm\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            show={props.show}\n        >\n            <Modal.Header>\n                <Modal.Title>Welcome!</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <p>Welcome to the 61A Typing Test!</p>\n                <p>Select a mode below to begin.</p>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={setMode(Mode.SINGLE)} variant=\"primary\">Single Player</Button>\n                <Button onClick={setMode(Mode.WAITING)} variant=\"warning\">Multiplayer</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n","import React from \"react\";\nimport \"./Character.css\";\n\nexport default function Character(props) {\n    let className = \"Character \";\n    if (props.correct) {\n        className += \"correct\";\n    } else if (props.wrong) {\n        className += \"wrong\";\n    }\n    return <span className={className}>{props.char}</span>;\n}\n","import React from \"react\";\nimport \"./Prompt.css\";\nimport Character from \"./Character.js\";\n\nexport default function Prompt(props) {\n    const { promptedWords } = props;\n    const { typedWords } = props;\n    const { currWord } = props;\n    const words = [];\n    let pastEnd = false;\n    for (let i = 0; i !== promptedWords.length; ++i) {\n        const promptedWord = promptedWords[i];\n        const typedWord = typedWords[i];\n        if (typedWord) {\n            const correct = promptedWord === typedWord;\n            for (const char of promptedWord) {\n                words.push(<Character\n                    key={words.length}\n                    char={char}\n                    correct={correct}\n                    wrong={!correct}\n                />);\n            }\n            words.push(<Character key={words.length} char=\" \" />);\n        } else if (!pastEnd) {\n            for (let j = 0; j !== promptedWord.length; ++j) {\n                const correct = currWord[j] && promptedWord[j] === currWord[j];\n                const wrong = currWord[j] && promptedWord[j] !== currWord[j];\n                words.push(<Character\n                    key={words.length}\n                    char={promptedWord[j]}\n                    correct={correct}\n                    wrong={wrong}\n                />);\n            }\n            words.push(<Character key={words.length} char=\" \" />);\n            pastEnd = true;\n        } else {\n            for (const char of promptedWord) {\n                words.push(<Character key={words.length} char={char} />);\n            }\n            words.push(<Character key={words.length} char=\" \" />);\n        }\n    }\n    return (\n        <div className=\"PromptBox\">\n            Look at the following words:\n            <div className=\"Prompt\">\n                {words}\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport \"./ProgressBars.css\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\n\nexport default function ProgressBars({ progress: allProgress, playerIndex }) {\n    const variants = [\"info\", \"warning\", \"success\", \"danger\"];\n\n    return (\n        <div className=\"ProgressBars\">\n            {allProgress\n                .map(([progress, time], index) => {\n                    const displayText = progress === 1 && `${time.toFixed(2)} seconds`;\n                    const playerSuffix = index === playerIndex ? \" (you)\" : \"\";\n                    return (\n                        <div\n                            className=\"ProgressBar\"\n                            key={index}\n                        >\n                            <ProgressBar\n                                variant={variants[index]}\n                                animated\n                                label={`Player ${index + 1}${playerSuffix}`}\n                                now={progress * 100}\n                            />\n                            <div className=\"barData\">\n                                {displayText}\n                            </div>\n                        </div>\n                    );\n                })}\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport $ from \"jquery\";\nimport Input from \"./Input.js\";\nimport Indicators from \"./Indicators.js\";\nimport Leaderboard from \"./Leaderboard.js\";\nimport LoadingDialog from \"./LoadingDialog.js\";\nimport Options from \"./Options.js\";\nimport OpeningDialog from \"./OpeningDialog.js\";\nimport Prompt from \"./Prompt.js\";\nimport ProgressBars from \"./ProgressBars.js\";\n\nexport const Mode = {\n    SINGLE: \"single\",\n    MULTI: \"multi\",\n    WELCOME: \"welcome\",\n    WAITING: \"waiting\",\n};\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            promptedWords: [\"Please wait - loading!\"],\n            typedWords: [],\n            wpm: \"None\",\n            accuracy: \"None\",\n            startTime: 0,\n            currTime: 0,\n            pigLatin: false,\n            autoCorrect: false,\n            currWord: \"\",\n            inputActive: false,\n            numPlayers: 1,\n            mode: Mode.SINGLE,\n            playerList: [],\n            progress: [],\n            showLeaderboard: false,\n            fastestWords: \"\",\n        };\n        this.timer = null;\n        this.multiplayerTimer = null;\n\n        $.post(\"/request_id\").done((id) => {\n            if (id !== null) {\n                this.setState({ id: id.toString(), mode: Mode.WELCOME });\n            }\n        });\n    }\n\n    componentDidMount() {\n        this.initialize();\n    }\n\n    componentDidUpdate() {\n        if (this.state.mode === Mode.WELCOME\n            || this.state.mode === Mode.WAITING\n            || this.state.showLeaderboard\n        ) {\n            document.getElementById(\"app-root\").style.filter = \"blur(5px)\";\n        } else {\n            document.getElementById(\"app-root\").style.filter = \"none\";\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n        clearInterval(this.multiplayerTimer);\n    }\n\n    initialize = () => {\n        this.setState({\n            typedWords: [],\n            currWord: \"\",\n            inputActive: true,\n            wpm: \"None\",\n            accuracy: \"None\",\n        });\n\n        $.post(\"/request_paragraph\").done((data) => {\n            if (this.state.pigLatin) {\n                $.post(\"/translate_to_pig_latin\", {\n                    text: data,\n                }, (translated) => {\n                    this.setState({\n                        promptedWords: translated.split(\" \"),\n                    });\n                });\n            } else {\n                this.setState({\n                    promptedWords: data.split(\" \"),\n                });\n            }\n        });\n\n        this.setState({ startTime: 0, currTime: 0 });\n\n        clearInterval(this.timer);\n        this.timer = null;\n    };\n\n    restart = () => {\n        this.timer = setInterval(this.updateReadouts, 100);\n        this.setState({\n            startTime: this.getCurrTime(),\n            currTime: this.getCurrTime(),\n        });\n    };\n\n    updateReadouts = () => {\n        const promptedText = this.state.promptedWords.join(\" \");\n        const typedText = this.state.typedWords.join(\" \");\n        $.post(\"/analyze\", {\n            promptedText,\n            typedText,\n            startTime: this.state.startTime,\n            endTime: this.getCurrTime(),\n        }).done((data) => {\n            this.setState({\n                wpm: data[0].toFixed(1),\n                accuracy: data[1].toFixed(1),\n                currTime: this.getCurrTime(),\n            });\n        });\n    };\n\n    reportProgress = () => {\n        const promptedText = this.state.promptedWords.join(\" \");\n        $.post(\"/report_progress\", {\n            id: this.state.id,\n            typed: this.state.typedWords.join(\" \"),\n            prompt: promptedText,\n        });\n    };\n\n    requestProgress = () => {\n        $.post(\"/request_progress\", {\n            targets: this.state.playerList,\n        }).done((progress) => {\n            this.setState({\n                progress,\n            });\n            if (progress.every((p) => p[0] === 1.0)) {\n                clearInterval(this.multiplayerTimer);\n                this.fastestWords();\n            }\n        });\n    };\n\n    fastestWords = () => {\n        $.post(\"/fastest_words\", {\n            targets: this.state.playerList,\n            prompt: this.state.promptedWords.join(\" \"),\n        }).done((fastestWords) => {\n            this.setState({ fastestWords });\n        });\n    };\n\n    popPrevWord = () => {\n        if (this.state.typedWords.length !== 0) {\n            const out = this.state.typedWords[this.state.typedWords.length - 1];\n            this.setState((state) => ({\n                typedWords: state.typedWords.slice(0, state.typedWords.length - 1),\n            }));\n            return out;\n        } else {\n            return \"\";\n        }\n    };\n\n    getCurrTime = () => (new Date()).getTime() / 1000;\n\n    handleWordTyped = (word) => {\n        if (!word) {\n            return true;\n        }\n\n        const wordIndex = this.state.typedWords.length;\n\n        const afterWordTyped = () => {\n            this.updateReadouts();\n            if (this.state.mode === Mode.MULTI) {\n                this.reportProgress();\n            }\n        };\n\n        this.setState((state) => {\n            if (state.autoCorrect && word !== state.promptedWords[wordIndex]) {\n                $.post(\"/autocorrect\", { word }).done((data) => {\n                    // eslint-disable-next-line no-shadow\n                    this.setState((state) => {\n                        if (state.typedWords[wordIndex] !== word) {\n                            return {};\n                        }\n                        const { typedWords } = state;\n                        typedWords[wordIndex] = data;\n                        return { typedWords };\n                    });\n                });\n            }\n\n            return {\n                typedWords: state.typedWords.concat([word]),\n                currWord: \"\",\n            };\n        }, afterWordTyped);\n\n        return true;\n    };\n\n    handleChange = (currWord) => {\n        this.setState({ currWord });\n        if (this.state.typedWords.length + 1 === this.state.promptedWords.length\n            && this.state.promptedWords[this.state.promptedWords.length - 1] === currWord) {\n            clearInterval(this.timer);\n            this.setState({ inputActive: false });\n            this.handleWordTyped(currWord);\n        } else if (!this.timer) {\n            this.restart();\n        }\n    };\n\n    handlePigLatinToggle = () => {\n        this.initialize();\n        this.setState((state) => ({\n            autoCorrect: false,\n            pigLatin: !state.pigLatin,\n        }));\n    };\n\n    handleAutoCorrectToggle = () => {\n        this.initialize();\n        this.setState((state) => ({\n            autoCorrect: !state.autoCorrect,\n            pigLatin: false,\n        }));\n    };\n\n    setMode = (mode) => {\n        this.setState({ mode });\n        if (mode === Mode.WAITING) {\n            this.multiplayerTimer = setInterval(this.requestMatch, 1000);\n        }\n    };\n\n    requestMatch = () => {\n        $.post(\"/request_match\", { id: this.state.id }).done((data) => {\n            if (data.start) {\n                this.setState({\n                    mode: Mode.MULTI,\n                    playerList: data.players,\n                    numPlayers: data.players.length,\n                    promptedWords: data.text.split(\" \"),\n                    progress: new Array(data.players.length).fill([0, 0]),\n                    pigLatin: false,\n                    autoCorrect: false,\n                });\n                clearInterval(this.multiplayerTimer);\n                this.multiplayerTimer = setInterval(this.requestProgress, 500);\n            } else {\n                this.setState({\n                    numPlayers: data.numWaiting,\n                });\n            }\n        });\n    };\n\n    toggleLeaderBoard = () => {\n        this.setState(({ showLeaderboard }) => ({\n            showLeaderboard: !showLeaderboard,\n        }));\n    };\n\n    render() {\n        const {\n            wpm, accuracy, numPlayers, startTime, currTime, playerList, id, fastestWords,\n        } = this.state;\n        const remainingTime = (currTime - startTime).toFixed(1);\n        const playerIndex = playerList.indexOf(id);\n        const fastestWordsDisplay = (\n            <div>\n                <pre>{fastestWords}</pre>\n            </div>\n        );\n\n        return (\n            <>\n                <div className=\"App container\" id=\"app-root\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h1 className=\"display-4 mainTitle\">\n                                {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\n                                <b>C</b>S61A <b>A</b>utocorrected <b>T</b>yping <b>S</b>oftware\n                            </h1>\n                            <br />\n                            <Indicators\n                                wpm={wpm}\n                                accuracy={accuracy}\n                                remainingTime={remainingTime}\n                            />\n                            {this.state.mode === Mode.MULTI\n                            && (\n                                <ProgressBars\n                                    numPlayers={numPlayers}\n                                    progress={this.state.progress}\n                                    playerIndex={playerIndex}\n                                />\n                            )}\n                            <br />\n                            <Prompt\n                                promptedWords={this.state.promptedWords}\n                                typedWords={this.state.typedWords}\n                                currWord={this.state.currWord}\n                            />\n                            <br />\n                            <Input\n                                key={this.state.promptedWords[0]}\n                                correctWords={this.state.promptedWords}\n                                words={this.state.typedWords}\n                                onWordTyped={this.handleWordTyped}\n                                onChange={this.handleChange}\n                                popPrevWord={this.popPrevWord}\n                                active={this.state.inputActive}\n                            />\n                            <br />\n                            {this.state.mode !== Mode.MULTI\n                            && (\n                                <Options\n                                    pigLatin={this.state.pigLatin}\n                                    onPigLatinToggle={this.handlePigLatinToggle}\n                                    autoCorrect={this.state.autoCorrect}\n                                    onAutoCorrectToggle={this.handleAutoCorrectToggle}\n                                    onRestart={this.initialize}\n                                />\n                            )}\n                            {this.state.mode === Mode.MULTI && fastestWordsDisplay}\n                        </div>\n                    </div>\n                </div>\n                <OpeningDialog\n                    show={this.state.mode === Mode.WELCOME}\n                    setMode={this.setMode}\n                    toggleFindingOpponents={this.toggleFindingOpponents}\n                />\n                <LoadingDialog\n                    show={this.state.mode === Mode.WAITING}\n                    numPlayers={this.state.numPlayers}\n                />\n                <Leaderboard\n                    show={this.state.showLeaderboard}\n                    onHide={this.toggleLeaderBoard}\n                />\n            </>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\"\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === \"[::1]\"\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \"\n              + \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \"\n                  + \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404\n        || (contentType != null && contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\ndocument.body.prepend(new Comment(String.raw`\n _________________________________________ \n/ Hello adventurous student! If you want  \\\n| to see the source of the GUI, go to Dev |\n| Tools => Sources => Page => top =>      |\n| [this domain] => static => js and       |\n\\ enjoy!                                  /\n ----------------------------------------- \n  \\\n   \\\n    \\                         _\n     \\                       | \\\n      \\                      | |\n                             | |\n        |\\                   | |\n       /, ~\\                / /\n      X     \\`-.....-------./ /\n       ~-. ~  ~              |\n          \\             /    |\n           \\  /_     ___\\   /\n           | /\\ ~~~~~   \\ |\n           | | \\        || |\n           | |\\ \\       || )\n          (_/ (_/      ((_/\n`));\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}